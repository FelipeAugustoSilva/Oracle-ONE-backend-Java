Claro! Vou explicar herança no Java de forma simples para um iniciante.

Em programação, a herança é um conceito que nos permite criar novas classes a partir de classes existentes. Pense nisso como uma relação entre pais e filhos. A classe original é chamada de classe pai (ou superclasse) e a nova classe criada a partir dela é chamada de classe filha (ou subclasse).

A ideia principal da herança é que a classe filha herda todas as características (métodos e variáveis) da classe pai. Isso significa que você pode reutilizar o código já escrito na classe pai e adicionar funcionalidades extras específicas na classe filha, se necessário.

Por exemplo, suponha que você esteja escrevendo um programa para uma loja de animais. Você pode ter uma classe chamada "Animal" que contém métodos e variáveis ​​comuns a todos os animais, como "comer()" e "dormir()". Agora, você deseja adicionar uma nova classe chamada "Cachorro" que herda todas as características da classe "Animal" e também possui métodos específicos para latir e abanar o rabo.

Aqui está um exemplo de como seria a implementação:

```java
class Animal {
   public void comer() {
      System.out.println("O animal está comendo.");
   }

   public void dormir() {
      System.out.println("O animal está dormindo.");
   }
}

class Cachorro extends Animal {
   public void latir() {
      System.out.println("O cachorro está latindo.");
   }

   public void abanarRabo() {
      System.out.println("O cachorro está abanando o rabo.");
   }
}

public class Main {
   public static void main(String[] args) {
      Cachorro cachorro = new Cachorro();
      cachorro.comer(); // Herdado da classe Animal
      cachorro.latir(); // Método específico da classe Cachorro
   }
}
```

Nesse exemplo, a classe "Cachorro" estende a classe "Animal", usando a palavra-chave `extends`. Isso significa que a classe "Cachorro" herda todos os métodos e variáveis ​​da classe "Animal". Então, podemos criar um objeto "Cachorro" e usar tanto os métodos herdados da classe "Animal" quanto os métodos específicos da classe "Cachorro".

A herança permite criar uma hierarquia de classes, facilitando a organização e a reutilização de código. Ela ajuda a evitar a duplicação de código e permite que você escreva programas mais eficientes e flexíveis.

Lembre-se de que, como iniciante, é importante entender e praticar a herança aos poucos, à medida que você ganha mais familiaridade com a linguagem Java. Conforme você avança em seus estudos, você aprenderá sobre outros conceitos relacionados, como polimorfismo e sobrescrita de métodos.